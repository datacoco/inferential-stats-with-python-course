Creating confidence intervals in python
In this assessment, you will look at data from a study on toddler sleep habits.

The confidence intervals you create and the questions you answer in this Jupyter notebook will be used to answer questions in the following graded assignment.

import numpy as np
import pandas as pd
from scipy.stats import t
pd.set_option('display.max_columns', 30) # set so can see all columns of the DataFrame
import numpy as np
import pandas as pd
from scipy.stats import t
pd.set_option('display.max_columns', 30) # set so can see all columns of the DataFrame
Your goal is to analyse data which is the result of a study that examined differences in a number of sleep variables between napping and non-napping toddlers. Some of these sleep variables included: Bedtime (lights-off time in decimalized time), Night Sleep Onset Time (in decimalized time), Wake Time (sleep end time in decimalized time), Night Sleep Duration (interval between sleep onset and sleep end in minutes), and Total 24-Hour Sleep Duration (in minutes). Note: Decimalized time is the representation of the time of day using units which are decimally related.

The 20 study participants were healthy, normally developing toddlers with no sleep or behavioral problems. These children were categorized as napping or non-napping based upon parental report of children’s habitual sleep patterns. Researchers then verified napping status with data from actigraphy (a non-invasive method of monitoring human rest/activity cycles by wearing of a sensor on the wrist) and sleep diaries during the 5 days before the study assessments were made.

You are specifically interested in the results for the Bedtime, Night Sleep Duration, and Total 24- Hour Sleep Duration.

ref: Akacem LD, Simpkin CT, Carskadon MA, Wright KP Jr, Jenni OG, Achermann P, et al. (2015) The Timing of the Circadian Clock and Sleep Differ between Napping and Non-Napping Toddlers. PLoS ONE 10(4): e0125181. https://doi.org/10.1371/journal.pone.0125181

# Import the data (use this if running your Jupyter notebook within Coursera)
df = pd.read_csv("nap_no_nap.csv") 

# Imort the data (uncomment the line below and use this if you downloaded the Jupyter notebook)
# df = pd.read_csv("https://raw.githubusercontent.com/UMstatspy/UMStatsPy/master/Course_2/nap_no_nap.csv")

# First, look at the DataFrame to get a sense of the data
df
id	sex	age (months)	dlmo time	days napped	napping	nap lights outl time	nap sleep onset	nap midsleep	nap sleep offset	nap wake time	nap duration	nap time in bed	night bedtime	night sleep onset	sleep onset latency	night midsleep time	night wake time	night sleep duration	night time in bed	24 h sleep duration	bedtime phase difference	sleep onset phase difference	midsleep phase difference	wake time phase difference
0	1	female	33.7	19.24	0	0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	20.45	20.68	0.23	1.92	7.17	629.40	643.00	629.40	-1.21	-1.44	6.68	11.93
1	2	female	31.5	18.27	0	0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	19.23	19.48	0.25	1.09	6.69	672.40	700.40	672.40	-0.96	-1.21	6.82	12.42
2	3	male	31.9	19.14	0	0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	19.60	20.05	0.45	1.29	6.53	628.80	682.60	628.80	-0.46	-0.91	6.15	11.39
3	4	female	31.6	19.69	0	0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	19.46	19.50	0.05	1.89	8.28	766.60	784.00	766.60	0.23	0.19	6.20	12.59
4	5	female	33.0	19.52	0	0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	19.21	19.65	0.45	1.30	6.95	678.00	718.00	678.00	0.31	-0.13	5.78	11.43
5	6	female	36.2	18.22	4	1	14.00	14.22	15.00	15.78	16.28	93.75	137.00	19.95	20.25	0.29	1.26	6.28	602.20	653.80	695.95	-1.73	-2.03	7.05	12.06
6	7	male	36.3	19.28	1	1	14.75	15.03	15.92	16.80	16.08	106.00	80.00	20.60	20.96	0.36	2.12	7.27	618.40	655.40	724.40	-1.32	-1.68	6.84	11.99
7	8	male	30.0	21.06	5	1	13.09	13.43	14.44	15.46	15.82	121.60	163.80	22.01	22.53	0.51	2.92	7.31	526.80	582.40	648.40	-0.95	-1.47	5.86	10.25
8	9	male	33.2	19.38	2	1	14.41	14.42	15.71	17.01	16.60	155.50	131.25	20.24	20.37	0.13	1.60	6.82	626.80	660.33	782.30	-0.86	-0.99	6.22	11.44
9	10	female	37.1	19.93	3	1	13.12	13.42	14.31	15.19	15.30	106.67	130.67	20.78	21.63	0.84	2.20	6.52	549.50	626.00	656.17	-0.76	-1.82	6.21	10.59
10	11	male	32.9	18.79	4	1	13.99	14.03	14.85	15.68	16.10	98.75	126.60	19.45	19.88	0.44	1.34	6.80	655.20	694.80	753.95	-0.66	-1.09	6.55	12.01
11	12	female	35.0	19.65	5	1	13.18	13.45	14.33	15.21	15.35	105.80	130.40	20.18	20.84	0.66	1.93	7.03	611.20	660.40	717.00	-0.53	-1.19	6.28	11.38
12	13	male	35.1	19.83	3	1	13.94	14.48	15.26	16.03	15.78	93.33	110.20	20.22	20.89	0.67	1.99	7.09	611.80	662.20	705.13	-0.39	-1.06	6.16	11.26
13	14	female	35.6	19.88	4	1	12.68	13.08	13.92	14.76	15.00	100.75	139.33	20.26	20.80	0.54	1.96	7.11	618.80	671.20	719.55	-0.38	-0.92	6.08	11.23
14	15	female	36.6	19.94	4	1	12.71	12.88	13.80	14.72	14.88	110.75	130.00	20.28	20.92	0.64	1.49	6.33	548.00	595.00	658.75	-0.34	-0.90	5.64	10.39
15	16	male	36.5	20.25	3	1	13.74	14.68	15.66	16.64	16.45	117.33	162.75	20.46	21.25	0.79	2.19	7.13	593.25	662.00	710.58	-0.21	-1.00	5.94	10.88
16	17	female	33.7	20.33	5	1	13.15	13.87	14.49	15.11	15.40	74.20	135.00	20.43	21.03	0.60	2.44	7.86	649.80	708.60	724.00	-0.10	-0.70	6.12	11.53
17	18	male	36.4	20.16	5	1	12.47	12.56	13.30	14.05	14.25	89.80	107.00	20.02	20.45	0.43	1.23	6.01	573.60	614.60	663.40	0.14	-0.29	5.07	9.85
18	19	female	33.6	19.68	3	1	14.71	14.85	15.46	16.07	16.20	73.00	89.40	19.50	19.64	0.14	1.42	7.20	693.40	715.00	766.40	0.18	0.04	5.74	11.52
19	20	male	33.8	20.51	3	1	12.68	13.54	14.30	15.07	15.23	91.67	152.67	20.18	21.38	1.19	2.51	7.63	615.33	692.00	707.00	0.33	-0.87	6.00	11.12
Question: What variable is used in the column 'napping' to indicate a toddler takes a nap? binary Question: What is the sample size n? 20 What is the sample size for toddlers who nap, n1, 15 out of 20 and toddlers who don't nap, n2? 5 out of 20

Average bedtime confidence interval for napping and non napping toddlers
Create two 95% confidence intervals for the average bedtime, one for toddler who nap and one for toddlers who don't.

Before any analysis, we will convert 'night bedtime' into decimalized time.

# Convert 'night bedtime' into decimalized time
df.loc[:,'night bedtime'] = np.floor(df['night bedtime'])*60 + np.round(df['night bedtime']%1,2 )*100
df


Now, isolate the column 'night bedtime' for those who nap into a new variable, and those who didn't nap into another new variable.

df["bedtime_nap"] = df.loc[df.napping== 1, "night bedtime"]
​
df

df["bedtime_no_nap"] = df.loc[df.napping== 0, "night bedtime"].dropna()
df



nap_mean_bedtime = df['bedtime_nap'].dropna().mean()
​
nap_mean_bedtime
1233.0666666666666
​
​
dz = df.groupby("napping").agg({"night bedtime": [np.mean, np.std, np.size]})
​
dz
night bedtime
mean	std	size
napping			
0	1191.000000	34.300146	5.0
1	1233.066667	34.445540	15.0

no_nap_mean_bedtime = df['bedtime_no_nap'].dropna().mean()
no_nap_mean_bedtime
1191.0


Now find the standard error for X¯nap and X¯no nap.

nap_std = 34.445540
​
nap_se_mean_bedtime = nap_std / np.sqrt(15)
nap_se_mean_bedtime
​
​
8.893800184741428
no_nap_std = 34.300146
​
no_nap_se_mean_bedtime = no_nap_std / np.sqrt(5)
no_nap_se_mean_bedtime
15.339491618833499


Question: Given our sample sizes of n1 and n2 for napping and non napping toddlers respectively, how many degrees of freedom (df) are there for the associated t distributions? 19

To build a 95% confidence interval, what is the value of t*? 2.09 You can find this value using the percent point function:

from scipy.stats import t

t.ppf(probabiliy, df)
This will return the quantile value such that to the left of this value, the tail probabiliy is equal to the input probabiliy (for the specified degrees of freedom).

from scipy.stats import t
​
​
# Find the t_stars for the 95% confidence intervals
nap_t_star = t.ppf(.95, df=15)
nap_t_star
1.7530503556925547
no_nap_t_star = t.ppf(.95, df=5)
no_nap_t_star
2.015048372669157

Now to create our confidence intervals. For the average bedtime for nap and no nap, find the upper and lower bounds for the respective confidence intervals.

import statsmodels.api as sm

no_nap_ci = sm.stats.proportion_confint(5, 5+15)
nap_ci = sm.stats.proportion_confint(15, 5+15)
​
(no_nap_ci, nap_ci)

((0.06022730321775094, 0.43977269678224906),
 (0.5602273032177509, 0.9397726967822491))
 
​
lcb_nap = 1233 - nap_t_star * 34.445540 / np.sqrt(15)
ucb_nap = 1233 + nap_t_star * 34.445540 / np.sqrt(15)
print("nap", lcb_nap, ucb_nap)
​
lcb_no_nap = 1191 - no_nap_t_star * 34.300146 / np.sqrt(5)
ucb_no_nap = 1191 + no_nap_t_star * 34.300146 / np.sqrt(5)
print("no nap", lcb_no_nap, ucb_no_nap)
​
nap 1217.4087204226805 1248.5912795773195
no nap 1160.0901823758975 1221.9098176241025
​
lcb_nap = 1233 - 2.144 * 34.445540 / np.sqrt(15)
ucb_nap = 1233 + 2.144 * 34.445540 / np.sqrt(15)
print("nap", lcb_nap, ucb_nap)
​
lcb_no_nap = 1191 - 2.776 * 34.300146 / np.sqrt(5)
ucb_no_nap = 1191 + 2.776 * 34.300146 / np.sqrt(5)
print("no nap", lcb_no_nap, ucb_no_nap)
nap 1213.9316924039144 1252.0683075960856
no nap 1148.417571266118 1233.582428733882


nappers = df.loc[df.napping==1, "night bedtime"].dropna()
sm.stats.DescrStatsW(nappers).zconfint_mean()
​
​
(1215.635138529232, 1250.498194804101)

no_nappers = df.loc[df.napping==0, "night bedtime"].dropna()
sm.stats.DescrStatsW(no_nappers).zconfint_mean()
(1160.9351490855297, 1221.0648509144703)
